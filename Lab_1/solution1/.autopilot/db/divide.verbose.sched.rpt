

================================================================
== Vivado HLS Report for 'divide'
================================================================
* Date:           Sun Jul  9 16:42:04 2023

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        Lab_1
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.462|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|   17|    1|   17|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   16|   16|         2|          -|          -|     8|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp & !tmp_1)
3 --> 
	2  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.81>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %N) nounwind, !map !7"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %D) nounwind, !map !13"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %Q) nounwind, !map !17"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %R) nounwind, !map !23"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @divide_str) nounwind"   --->   Operation 8 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%D_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %D) nounwind"   --->   Operation 9 'read' 'D_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%N_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %N) nounwind"   --->   Operation 10 'read' 'N_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.55ns)   --->   "%tmp = icmp eq i8 %D_read, 0" [Lab_1/core.cpp:2]   --->   Operation 11 'icmp' 'tmp' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "br i1 %tmp, label %.loopexit, label %1" [Lab_1/core.cpp:2]   --->   Operation 12 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%R_load = alloca i8"   --->   Operation 13 'alloca' 'R_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%Q_load = alloca i8"   --->   Operation 14 'alloca' 'Q_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %Q, i8 0) nounwind" [Lab_1/core.cpp:3]   --->   Operation 15 'write' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %R, i8 0) nounwind" [Lab_1/core.cpp:4]   --->   Operation 16 'write' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.76ns)   --->   "store i8 0, i8* %Q_load"   --->   Operation 17 'store' <Predicate = (!tmp)> <Delay = 1.76>
ST_1 : Operation 18 [1/1] (1.81ns)   --->   "store i8 0, i8* %R_load"   --->   Operation 18 'store' <Predicate = (!tmp)> <Delay = 1.81>
ST_1 : Operation 19 [1/1] (1.76ns)   --->   "br label %2" [Lab_1/core.cpp:5]   --->   Operation 19 'br' <Predicate = (!tmp)> <Delay = 1.76>

State 2 <SV = 1> <Delay = 7.46>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%i = phi i4 [ 7, %1 ], [ %i_1, %._crit_edge ]"   --->   Operation 20 'phi' 'i' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%i_cast = sext i4 %i to i8" [Lab_1/core.cpp:5]   --->   Operation 21 'sext' 'i_cast' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %i, i32 3)" [Lab_1/core.cpp:5]   --->   Operation 22 'bitselect' 'tmp_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind"   --->   Operation 23 'speclooptripcount' 'empty' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %.loopexit.loopexit, label %3" [Lab_1/core.cpp:5]   --->   Operation 24 'br' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%R_load_1 = load i8* %R_load"   --->   Operation 25 'load' 'R_load_1' <Predicate = (!tmp & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (2.39ns)   --->   "%tmp_4 = shl i8 1, %i_cast" [Lab_1/core.cpp:7]   --->   Operation 26 'shl' 'tmp_4' <Predicate = (!tmp & !tmp_1)> <Delay = 2.39> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node iBitN)   --->   "%tmp_5 = and i8 %tmp_4, %N_read" [Lab_1/core.cpp:7]   --->   Operation 27 'and' 'tmp_5' <Predicate = (!tmp & !tmp_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (3.14ns) (out node of the LUT)   --->   "%iBitN = lshr i8 %tmp_5, %i_cast" [Lab_1/core.cpp:7]   --->   Operation 28 'lshr' 'iBitN' <Predicate = (!tmp & !tmp_1)> <Delay = 3.14> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_2 = trunc i8 %iBitN to i1" [Lab_1/core.cpp:8]   --->   Operation 29 'trunc' 'tmp_2' <Predicate = (!tmp & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_3 = trunc i8 %R_load_1 to i7"   --->   Operation 30 'trunc' 'tmp_3' <Predicate = (!tmp & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_9 = call i8 @_ssdm_op_BitConcatenate.i8.i7.i1(i7 %tmp_3, i1 %tmp_2)" [Lab_1/core.cpp:8]   --->   Operation 31 'bitconcatenate' 'tmp_9' <Predicate = (!tmp & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %R, i8 %tmp_9) nounwind" [Lab_1/core.cpp:8]   --->   Operation 32 'write' <Predicate = (!tmp & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.55ns)   --->   "%tmp_s = icmp ult i8 %tmp_9, %D_read" [Lab_1/core.cpp:9]   --->   Operation 33 'icmp' 'tmp_s' <Predicate = (!tmp & !tmp_1)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "br i1 %tmp_s, label %.._crit_edge_crit_edge, label %4" [Lab_1/core.cpp:9]   --->   Operation 34 'br' <Predicate = (!tmp & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%Q_load_1 = load i8* %Q_load" [Lab_1/core.cpp:11]   --->   Operation 35 'load' 'Q_load_1' <Predicate = (!tmp & !tmp_1 & !tmp_s)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (1.91ns)   --->   "%tmp_6 = sub i8 %tmp_9, %D_read" [Lab_1/core.cpp:10]   --->   Operation 36 'sub' 'tmp_6' <Predicate = (!tmp & !tmp_1 & !tmp_s)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.99ns)   --->   "%tmp_7 = or i8 %Q_load_1, %tmp_4" [Lab_1/core.cpp:11]   --->   Operation 37 'or' 'tmp_7' <Predicate = (!tmp & !tmp_1 & !tmp_s)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %Q, i8 %tmp_7) nounwind" [Lab_1/core.cpp:11]   --->   Operation 38 'write' <Predicate = (!tmp & !tmp_1 & !tmp_s)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.76ns)   --->   "store i8 %tmp_7, i8* %Q_load" [Lab_1/core.cpp:11]   --->   Operation 39 'store' <Predicate = (!tmp & !tmp_1 & !tmp_s)> <Delay = 1.76>
ST_2 : Operation 40 [1/1] (1.81ns)   --->   "store i8 %tmp_9, i8* %R_load" [Lab_1/core.cpp:8]   --->   Operation 40 'store' <Predicate = (!tmp & !tmp_1 & tmp_s)> <Delay = 1.81>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "br label %._crit_edge" [Lab_1/core.cpp:9]   --->   Operation 41 'br' <Predicate = (!tmp & !tmp_1 & tmp_s)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 42 'br' <Predicate = (!tmp & tmp_1)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "ret void" [Lab_1/core.cpp:15]   --->   Operation 43 'ret' <Predicate = (tmp) | (tmp_1)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.81>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %R, i8 %tmp_6) nounwind" [Lab_1/core.cpp:10]   --->   Operation 44 'write' <Predicate = (!tmp_s)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (1.81ns)   --->   "store i8 %tmp_6, i8* %R_load" [Lab_1/core.cpp:10]   --->   Operation 45 'store' <Predicate = (!tmp_s)> <Delay = 1.81>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "br label %._crit_edge" [Lab_1/core.cpp:12]   --->   Operation 46 'br' <Predicate = (!tmp_s)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (1.73ns)   --->   "%i_1 = add i4 %i, -1" [Lab_1/core.cpp:5]   --->   Operation 47 'add' 'i_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "br label %2" [Lab_1/core.cpp:5]   --->   Operation 48 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.81ns
The critical path consists of the following:
	'alloca' operation ('R_load') [15]  (0 ns)
	'store' operation of constant 0 on local variable 'R_load' [20]  (1.81 ns)

 <State 2>: 7.46ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', Lab_1/core.cpp:5) [23]  (0 ns)
	'shl' operation ('tmp_4', Lab_1/core.cpp:7) [30]  (2.4 ns)
	'and' operation ('tmp_5', Lab_1/core.cpp:7) [31]  (0 ns)
	'lshr' operation ('iBitN', Lab_1/core.cpp:7) [32]  (3.15 ns)
	'sub' operation ('tmp_6', Lab_1/core.cpp:10) [41]  (1.92 ns)

 <State 3>: 1.81ns
The critical path consists of the following:
	'store' operation (Lab_1/core.cpp:10) of variable 'tmp_6', Lab_1/core.cpp:10 on local variable 'R_load' [46]  (1.81 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
