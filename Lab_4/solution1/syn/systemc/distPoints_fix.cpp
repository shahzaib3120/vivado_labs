// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "distPoints_fix.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic distPoints_fix::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic distPoints_fix::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<26> distPoints_fix::ap_ST_fsm_state1 = "1";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state2 = "10";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state3 = "100";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state4 = "1000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state5 = "10000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state6 = "100000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state7 = "1000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state8 = "10000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state9 = "100000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state10 = "1000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state11 = "10000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state12 = "100000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<26> distPoints_fix::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<32> distPoints_fix::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> distPoints_fix::ap_const_lv32_1 = "1";
const sc_lv<32> distPoints_fix::ap_const_lv32_2 = "10";
const sc_lv<1> distPoints_fix::ap_const_lv1_0 = "0";
const sc_lv<32> distPoints_fix::ap_const_lv32_3 = "11";
const sc_lv<32> distPoints_fix::ap_const_lv32_9 = "1001";
const sc_lv<32> distPoints_fix::ap_const_lv32_A = "1010";
const sc_lv<32> distPoints_fix::ap_const_lv32_16 = "10110";
const sc_lv<32> distPoints_fix::ap_const_lv32_17 = "10111";
const sc_lv<32> distPoints_fix::ap_const_lv32_18 = "11000";
const sc_lv<32> distPoints_fix::ap_const_lv32_4 = "100";
const sc_lv<32> distPoints_fix::ap_const_lv32_B = "1011";
const sc_lv<34> distPoints_fix::ap_const_lv34_0 = "0000000000000000000000000000000000";
const sc_lv<32> distPoints_fix::ap_const_lv32_21 = "100001";
const sc_lv<32> distPoints_fix::ap_const_lv32_22 = "100010";
const sc_lv<29> distPoints_fix::ap_const_lv29_1FFFFFFF = "11111111111111111111111111111";
const sc_lv<1> distPoints_fix::ap_const_lv1_1 = "1";
const sc_lv<32> distPoints_fix::ap_const_lv32_1F = "11111";
const sc_lv<31> distPoints_fix::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> distPoints_fix::ap_const_lv32_5 = "101";
const sc_lv<32> distPoints_fix::ap_const_lv32_1E = "11110";
const sc_lv<26> distPoints_fix::ap_const_lv26_0 = "00000000000000000000000000";
const sc_lv<6> distPoints_fix::ap_const_lv6_21 = "100001";
const sc_lv<8> distPoints_fix::ap_const_lv8_9E = "10011110";
const sc_lv<8> distPoints_fix::ap_const_lv8_6A = "1101010";
const sc_lv<8> distPoints_fix::ap_const_lv8_69 = "1101001";
const sc_lv<32> distPoints_fix::ap_const_lv32_3F = "111111";
const sc_lv<32> distPoints_fix::ap_const_lv32_34 = "110100";
const sc_lv<32> distPoints_fix::ap_const_lv32_3E = "111110";
const sc_lv<63> distPoints_fix::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<54> distPoints_fix::ap_const_lv54_0 = "000000000000000000000000000000000000000000000000000000";
const sc_lv<12> distPoints_fix::ap_const_lv12_433 = "10000110011";
const sc_lv<12> distPoints_fix::ap_const_lv12_B = "1011";
const sc_lv<12> distPoints_fix::ap_const_lv12_FF5 = "111111110101";
const sc_lv<8> distPoints_fix::ap_const_lv8_0 = "00000000";
const sc_lv<32> distPoints_fix::ap_const_lv32_19 = "11001";
const sc_lv<12> distPoints_fix::ap_const_lv12_36 = "110110";
const sc_lv<16> distPoints_fix::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<16> distPoints_fix::ap_const_lv16_0 = "0000000000000000";
const bool distPoints_fix::ap_const_boolean_1 = true;

distPoints_fix::distPoints_fix(sc_module_name name) : sc_module(name), mVcdFile(0) {
    distPoints_fix_uibkb_U1 = new distPoints_fix_uibkb<1,6,32,32>("distPoints_fix_uibkb_U1");
    distPoints_fix_uibkb_U1->clk(ap_clk);
    distPoints_fix_uibkb_U1->reset(ap_rst);
    distPoints_fix_uibkb_U1->din0(tmp32_V_3_reg_721);
    distPoints_fix_uibkb_U1->ce(ap_var_for_const0);
    distPoints_fix_uibkb_U1->dout(grp_fu_130_p1);
    distPoints_fix_fpcud_U2 = new distPoints_fix_fpcud<1,1,32,64>("distPoints_fix_fpcud_U2");
    distPoints_fix_fpcud_U2->din0(v_assign_reg_741);
    distPoints_fix_fpcud_U2->dout(d_assign_fu_133_p1);
    distPoints_fix_fsdEe_U3 = new distPoints_fix_fsdEe<1,12,32,32,32>("distPoints_fix_fsdEe_U3");
    distPoints_fix_fsdEe_U3->clk(ap_clk);
    distPoints_fix_fsdEe_U3->reset(ap_rst);
    distPoints_fix_fsdEe_U3->din0(ap_var_for_const1);
    distPoints_fix_fsdEe_U3->din1(temp_reg_736);
    distPoints_fix_fsdEe_U3->ce(ap_var_for_const0);
    distPoints_fix_fsdEe_U3->dout(grp_fu_136_p2);
    distPoints_fix_mueOg_U4 = new distPoints_fix_mueOg<1,1,17,17,34>("distPoints_fix_mueOg_U4");
    distPoints_fix_mueOg_U4->din0(p_Val2_1_fu_658_p0);
    distPoints_fix_mueOg_U4->din1(p_Val2_1_fu_658_p1);
    distPoints_fix_mueOg_U4->dout(p_Val2_1_fu_658_p2);
    distPoints_fix_mafYi_U5 = new distPoints_fix_mafYi<1,1,17,17,34,34>("distPoints_fix_mafYi_U5");
    distPoints_fix_mafYi_U5->din0(grp_fu_664_p0);
    distPoints_fix_mafYi_U5->din1(grp_fu_664_p1);
    distPoints_fix_mafYi_U5->din2(p_Val2_1_reg_680);
    distPoints_fix_mafYi_U5->dout(grp_fu_664_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_F2_fu_451_p2);
    sensitive << ( tmp_10_fu_424_p1 );

    SC_METHOD(thread_OP1_V_1_fu_169_p1);
    sensitive << ( r_V_1_fu_163_p2 );

    SC_METHOD(thread_OP1_V_fu_173_p1);
    sensitive << ( r_V_reg_675 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( or_cond2_fu_644_p2 );
    sensitive << ( newSel2_fu_636_p3 );

    SC_METHOD(thread_f_fu_377_p1);
    sensitive << ( p_Result_2_fu_366_p5 );

    SC_METHOD(thread_grp_fu_664_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( OP1_V_fu_173_p1 );

    SC_METHOD(thread_grp_fu_664_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( OP1_V_fu_173_p1 );

    SC_METHOD(thread_icmp9_fu_503_p2);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( tmp_38_fu_493_p4 );

    SC_METHOD(thread_icmp_fu_271_p2);
    sensitive << ( tmp_3_reg_685 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_20_fu_261_p4 );

    SC_METHOD(thread_ireg_V_fu_388_p1);
    sensitive << ( d_assign_fu_133_p1 );

    SC_METHOD(thread_is_neg_fu_181_p3);
    sensitive << ( grp_fu_664_p3 );

    SC_METHOD(thread_man_V_1_fu_438_p2);
    sensitive << ( p_Result_3_fu_434_p1 );

    SC_METHOD(thread_man_V_2_fu_444_p3);
    sensitive << ( isneg_reg_746 );
    sensitive << ( p_Result_3_fu_434_p1 );
    sensitive << ( man_V_1_fu_438_p2 );

    SC_METHOD(thread_msb_idx_1_cast_fu_257_p1);
    sensitive << ( msb_idx_1_fu_251_p3 );

    SC_METHOD(thread_msb_idx_1_fu_251_p3);
    sensitive << ( tmp_9_reg_711 );
    sensitive << ( tmp_11_reg_716 );

    SC_METHOD(thread_msb_idx_fu_233_p2);
    sensitive << ( num_zeros_fu_229_p1 );

    SC_METHOD(thread_newSel1_fu_623_p3);
    sensitive << ( tmp_37_reg_791 );
    sensitive << ( sel_tmp9_fu_581_p2 );
    sensitive << ( tmp_22_fu_530_p3 );

    SC_METHOD(thread_newSel2_fu_636_p3);
    sensitive << ( or_cond_fu_617_p2 );
    sensitive << ( newSel_fu_609_p3 );
    sensitive << ( newSel1_fu_623_p3 );

    SC_METHOD(thread_newSel_fu_609_p3);
    sensitive << ( sel_tmp4_fu_604_p2 );
    sensitive << ( tmp_40_fu_546_p1 );
    sensitive << ( tmp_39_fu_526_p1 );

    SC_METHOD(thread_num_zeros_fu_229_p1);
    sensitive << ( tmp_8_fu_221_p3 );

    SC_METHOD(thread_or_cond1_fu_630_p2);
    sensitive << ( sel_tmp9_fu_581_p2 );
    sensitive << ( sel_tmp2_fu_555_p2 );

    SC_METHOD(thread_or_cond2_fu_644_p2);
    sensitive << ( or_cond_fu_617_p2 );
    sensitive << ( or_cond1_fu_630_p2 );

    SC_METHOD(thread_or_cond_fu_617_p2);
    sensitive << ( sel_tmp4_fu_604_p2 );
    sensitive << ( sel_tmp_fu_587_p2 );

    SC_METHOD(thread_p_Repl2_1_trunc_fu_353_p2);
    sensitive << ( tmp24_cast_cast_fu_346_p3 );
    sensitive << ( tmp_33_fu_343_p1 );

    SC_METHOD(thread_p_Result_1_fu_213_p3);
    sensitive << ( p_Result_s_fu_203_p4 );

    SC_METHOD(thread_p_Result_2_fu_366_p5);
    sensitive << ( tmp32_V_6_reg_726 );
    sensitive << ( tmp_4_fu_359_p3 );

    SC_METHOD(thread_p_Result_3_fu_434_p1);
    sensitive << ( tmp_12_fu_427_p3 );

    SC_METHOD(thread_p_Result_4_fu_327_p4);
    sensitive << ( tmp32_V_6_fu_323_p1 );

    SC_METHOD(thread_p_Result_s_fu_203_p4);
    sensitive << ( p_Val2_4_cast_fu_200_p1 );

    SC_METHOD(thread_p_Val2_1_fu_658_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( OP1_V_1_fu_169_p1 );

    SC_METHOD(thread_p_Val2_1_fu_658_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( OP1_V_1_fu_169_p1 );

    SC_METHOD(thread_p_Val2_4_cast_fu_200_p1);
    sensitive << ( p_Val2_4_reg_695 );

    SC_METHOD(thread_p_Val2_4_fu_193_p3);
    sensitive << ( is_neg_fu_181_p3 );
    sensitive << ( grp_fu_664_p3 );
    sensitive << ( tmp_7_fu_188_p2 );

    SC_METHOD(thread_r_V_1_fu_163_p2);
    sensitive << ( tmp_5_fu_155_p1 );
    sensitive << ( tmp_6_fu_159_p1 );

    SC_METHOD(thread_r_V_fu_149_p2);
    sensitive << ( tmp_fu_141_p1 );
    sensitive << ( tmp_1_fu_145_p1 );

    SC_METHOD(thread_sel_tmp1_fu_550_p2);
    sensitive << ( tmp_13_reg_762 );

    SC_METHOD(thread_sel_tmp21_demorgan_fu_593_p2);
    sensitive << ( tmp_14_reg_773 );
    sensitive << ( sel_tmp6_demorgan_fu_560_p2 );

    SC_METHOD(thread_sel_tmp2_fu_555_p2);
    sensitive << ( tmp_17_reg_785 );
    sensitive << ( sel_tmp1_fu_550_p2 );

    SC_METHOD(thread_sel_tmp3_fu_598_p2);
    sensitive << ( sel_tmp21_demorgan_fu_593_p2 );

    SC_METHOD(thread_sel_tmp4_fu_604_p2);
    sensitive << ( icmp9_reg_797 );
    sensitive << ( sel_tmp3_fu_598_p2 );

    SC_METHOD(thread_sel_tmp6_demorgan_fu_560_p2);
    sensitive << ( tmp_13_reg_762 );
    sensitive << ( tmp_17_reg_785 );

    SC_METHOD(thread_sel_tmp6_fu_564_p2);
    sensitive << ( sel_tmp6_demorgan_fu_560_p2 );

    SC_METHOD(thread_sel_tmp7_fu_570_p2);
    sensitive << ( tmp_14_reg_773 );
    sensitive << ( sel_tmp6_fu_564_p2 );

    SC_METHOD(thread_sel_tmp8_fu_575_p2);
    sensitive << ( tmp_18_fu_512_p2 );

    SC_METHOD(thread_sel_tmp9_fu_581_p2);
    sensitive << ( sel_tmp7_fu_570_p2 );
    sensitive << ( sel_tmp8_fu_575_p2 );

    SC_METHOD(thread_sel_tmp_fu_587_p2);
    sensitive << ( tmp_18_fu_512_p2 );
    sensitive << ( sel_tmp7_fu_570_p2 );

    SC_METHOD(thread_sh_amt_cast_fu_509_p1);
    sensitive << ( sh_amt_reg_779 );

    SC_METHOD(thread_sh_amt_fu_475_p3);
    sensitive << ( tmp_14_fu_457_p2 );
    sensitive << ( tmp_15_fu_463_p2 );
    sensitive << ( tmp_16_fu_469_p2 );

    SC_METHOD(thread_temp_fu_381_p3);
    sensitive << ( tmp_3_reg_685 );
    sensitive << ( f_fu_377_p1 );

    SC_METHOD(thread_tmp24_cast_cast_fu_346_p3);
    sensitive << ( tmp_2_reg_731 );

    SC_METHOD(thread_tmp32_V_1_fu_286_p2);
    sensitive << ( tmp32_V_fu_277_p1 );
    sensitive << ( tmp_s_fu_280_p2 );

    SC_METHOD(thread_tmp32_V_2_fu_311_p1);
    sensitive << ( tmp_31_fu_306_p2 );

    SC_METHOD(thread_tmp32_V_3_fu_315_p3);
    sensitive << ( icmp_fu_271_p2 );
    sensitive << ( tmp32_V_1_fu_286_p2 );
    sensitive << ( tmp32_V_2_fu_311_p1 );

    SC_METHOD(thread_tmp32_V_6_fu_323_p1);
    sensitive << ( grp_fu_130_p1 );

    SC_METHOD(thread_tmp32_V_fu_277_p1);
    sensitive << ( p_Val2_4_reg_695 );

    SC_METHOD(thread_tmp_10_fu_424_p1);
    sensitive << ( exp_tmp_V_reg_752 );

    SC_METHOD(thread_tmp_12_fu_427_p3);
    sensitive << ( tmp_36_reg_757 );

    SC_METHOD(thread_tmp_13_fu_418_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_34_fu_392_p1 );

    SC_METHOD(thread_tmp_14_fu_457_p2);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( F2_fu_451_p2 );

    SC_METHOD(thread_tmp_15_fu_463_p2);
    sensitive << ( F2_fu_451_p2 );

    SC_METHOD(thread_tmp_16_fu_469_p2);
    sensitive << ( F2_fu_451_p2 );

    SC_METHOD(thread_tmp_17_fu_483_p2);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( F2_fu_451_p2 );

    SC_METHOD(thread_tmp_18_fu_512_p2);
    sensitive << ( sh_amt_reg_779 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_tmp_19_fu_517_p1);
    sensitive << ( sh_amt_cast_fu_509_p1 );

    SC_METHOD(thread_tmp_1_fu_145_p1);
    sensitive << ( x1_V );

    SC_METHOD(thread_tmp_20_fu_261_p4);
    sensitive << ( msb_idx_1_fu_251_p3 );

    SC_METHOD(thread_tmp_21_fu_521_p2);
    sensitive << ( man_V_2_reg_768 );
    sensitive << ( tmp_19_fu_517_p1 );

    SC_METHOD(thread_tmp_22_fu_530_p3);
    sensitive << ( isneg_reg_746 );

    SC_METHOD(thread_tmp_23_fu_537_p1);
    sensitive << ( tmp_37_reg_791 );

    SC_METHOD(thread_tmp_24_fu_540_p2);
    sensitive << ( sh_amt_cast_fu_509_p1 );
    sensitive << ( tmp_23_fu_537_p1 );

    SC_METHOD(thread_tmp_25_fu_292_p1);
    sensitive << ( msb_idx_1_fu_251_p3 );

    SC_METHOD(thread_tmp_29_fu_296_p2);
    sensitive << ( tmp_25_fu_292_p1 );

    SC_METHOD(thread_tmp_2_fu_337_p2);
    sensitive << ( tmp_3_reg_685 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( p_Result_4_fu_327_p4 );

    SC_METHOD(thread_tmp_30_fu_302_p1);
    sensitive << ( tmp_29_fu_296_p2 );

    SC_METHOD(thread_tmp_31_fu_306_p2);
    sensitive << ( p_Val2_4_cast_reg_701 );
    sensitive << ( tmp_30_fu_302_p1 );

    SC_METHOD(thread_tmp_33_fu_343_p1);
    sensitive << ( msb_idx_reg_706 );

    SC_METHOD(thread_tmp_34_fu_392_p1);
    sensitive << ( ireg_V_fu_388_p1 );

    SC_METHOD(thread_tmp_36_fu_414_p1);
    sensitive << ( ireg_V_fu_388_p1 );

    SC_METHOD(thread_tmp_37_fu_489_p1);
    sensitive << ( man_V_2_fu_444_p3 );

    SC_METHOD(thread_tmp_38_fu_493_p4);
    sensitive << ( sh_amt_fu_475_p3 );

    SC_METHOD(thread_tmp_39_fu_526_p1);
    sensitive << ( tmp_21_fu_521_p2 );

    SC_METHOD(thread_tmp_3_fu_176_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_664_p3 );

    SC_METHOD(thread_tmp_40_fu_546_p1);
    sensitive << ( tmp_24_fu_540_p2 );

    SC_METHOD(thread_tmp_4_fu_359_p3);
    sensitive << ( is_neg_reg_690 );
    sensitive << ( p_Repl2_1_trunc_fu_353_p2 );

    SC_METHOD(thread_tmp_5_fu_155_p1);
    sensitive << ( y2_V );

    SC_METHOD(thread_tmp_6_fu_159_p1);
    sensitive << ( y1_V );

    SC_METHOD(thread_tmp_7_fu_188_p2);
    sensitive << ( grp_fu_664_p3 );

    SC_METHOD(thread_tmp_8_fu_221_p3);
    sensitive << ( p_Result_1_fu_213_p3 );

    SC_METHOD(thread_tmp_9_fu_239_p1);
    sensitive << ( msb_idx_fu_233_p2 );

    SC_METHOD(thread_tmp_fu_141_p1);
    sensitive << ( x2_V );

    SC_METHOD(thread_tmp_s_fu_280_p2);
    sensitive << ( msb_idx_1_cast_fu_257_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "distPoints_fix_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x1_V, "(port)x1_V");
    sc_trace(mVcdFile, y1_V, "(port)y1_V");
    sc_trace(mVcdFile, x2_V, "(port)x2_V");
    sc_trace(mVcdFile, y2_V, "(port)y2_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, r_V_fu_149_p2, "r_V_fu_149_p2");
    sc_trace(mVcdFile, r_V_reg_675, "r_V_reg_675");
    sc_trace(mVcdFile, p_Val2_1_fu_658_p2, "p_Val2_1_fu_658_p2");
    sc_trace(mVcdFile, p_Val2_1_reg_680, "p_Val2_1_reg_680");
    sc_trace(mVcdFile, tmp_3_fu_176_p2, "tmp_3_fu_176_p2");
    sc_trace(mVcdFile, tmp_3_reg_685, "tmp_3_reg_685");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, is_neg_fu_181_p3, "is_neg_fu_181_p3");
    sc_trace(mVcdFile, is_neg_reg_690, "is_neg_reg_690");
    sc_trace(mVcdFile, p_Val2_4_fu_193_p3, "p_Val2_4_fu_193_p3");
    sc_trace(mVcdFile, p_Val2_4_reg_695, "p_Val2_4_reg_695");
    sc_trace(mVcdFile, p_Val2_4_cast_fu_200_p1, "p_Val2_4_cast_fu_200_p1");
    sc_trace(mVcdFile, p_Val2_4_cast_reg_701, "p_Val2_4_cast_reg_701");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, msb_idx_fu_233_p2, "msb_idx_fu_233_p2");
    sc_trace(mVcdFile, msb_idx_reg_706, "msb_idx_reg_706");
    sc_trace(mVcdFile, tmp_9_fu_239_p1, "tmp_9_fu_239_p1");
    sc_trace(mVcdFile, tmp_9_reg_711, "tmp_9_reg_711");
    sc_trace(mVcdFile, tmp_11_reg_716, "tmp_11_reg_716");
    sc_trace(mVcdFile, tmp32_V_3_fu_315_p3, "tmp32_V_3_fu_315_p3");
    sc_trace(mVcdFile, tmp32_V_3_reg_721, "tmp32_V_3_reg_721");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp32_V_6_fu_323_p1, "tmp32_V_6_fu_323_p1");
    sc_trace(mVcdFile, tmp32_V_6_reg_726, "tmp32_V_6_reg_726");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_2_fu_337_p2, "tmp_2_fu_337_p2");
    sc_trace(mVcdFile, tmp_2_reg_731, "tmp_2_reg_731");
    sc_trace(mVcdFile, temp_fu_381_p3, "temp_fu_381_p3");
    sc_trace(mVcdFile, temp_reg_736, "temp_reg_736");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_136_p2, "grp_fu_136_p2");
    sc_trace(mVcdFile, v_assign_reg_741, "v_assign_reg_741");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, isneg_reg_746, "isneg_reg_746");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, exp_tmp_V_reg_752, "exp_tmp_V_reg_752");
    sc_trace(mVcdFile, tmp_36_fu_414_p1, "tmp_36_fu_414_p1");
    sc_trace(mVcdFile, tmp_36_reg_757, "tmp_36_reg_757");
    sc_trace(mVcdFile, tmp_13_fu_418_p2, "tmp_13_fu_418_p2");
    sc_trace(mVcdFile, tmp_13_reg_762, "tmp_13_reg_762");
    sc_trace(mVcdFile, man_V_2_fu_444_p3, "man_V_2_fu_444_p3");
    sc_trace(mVcdFile, man_V_2_reg_768, "man_V_2_reg_768");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, tmp_14_fu_457_p2, "tmp_14_fu_457_p2");
    sc_trace(mVcdFile, tmp_14_reg_773, "tmp_14_reg_773");
    sc_trace(mVcdFile, sh_amt_fu_475_p3, "sh_amt_fu_475_p3");
    sc_trace(mVcdFile, sh_amt_reg_779, "sh_amt_reg_779");
    sc_trace(mVcdFile, tmp_17_fu_483_p2, "tmp_17_fu_483_p2");
    sc_trace(mVcdFile, tmp_17_reg_785, "tmp_17_reg_785");
    sc_trace(mVcdFile, tmp_37_fu_489_p1, "tmp_37_fu_489_p1");
    sc_trace(mVcdFile, tmp_37_reg_791, "tmp_37_reg_791");
    sc_trace(mVcdFile, icmp9_fu_503_p2, "icmp9_fu_503_p2");
    sc_trace(mVcdFile, icmp9_reg_797, "icmp9_reg_797");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_fu_141_p1, "tmp_fu_141_p1");
    sc_trace(mVcdFile, tmp_1_fu_145_p1, "tmp_1_fu_145_p1");
    sc_trace(mVcdFile, tmp_5_fu_155_p1, "tmp_5_fu_155_p1");
    sc_trace(mVcdFile, tmp_6_fu_159_p1, "tmp_6_fu_159_p1");
    sc_trace(mVcdFile, r_V_1_fu_163_p2, "r_V_1_fu_163_p2");
    sc_trace(mVcdFile, grp_fu_664_p3, "grp_fu_664_p3");
    sc_trace(mVcdFile, tmp_7_fu_188_p2, "tmp_7_fu_188_p2");
    sc_trace(mVcdFile, p_Result_s_fu_203_p4, "p_Result_s_fu_203_p4");
    sc_trace(mVcdFile, p_Result_1_fu_213_p3, "p_Result_1_fu_213_p3");
    sc_trace(mVcdFile, tmp_8_fu_221_p3, "tmp_8_fu_221_p3");
    sc_trace(mVcdFile, num_zeros_fu_229_p1, "num_zeros_fu_229_p1");
    sc_trace(mVcdFile, msb_idx_1_fu_251_p3, "msb_idx_1_fu_251_p3");
    sc_trace(mVcdFile, tmp_20_fu_261_p4, "tmp_20_fu_261_p4");
    sc_trace(mVcdFile, msb_idx_1_cast_fu_257_p1, "msb_idx_1_cast_fu_257_p1");
    sc_trace(mVcdFile, tmp32_V_fu_277_p1, "tmp32_V_fu_277_p1");
    sc_trace(mVcdFile, tmp_s_fu_280_p2, "tmp_s_fu_280_p2");
    sc_trace(mVcdFile, tmp_25_fu_292_p1, "tmp_25_fu_292_p1");
    sc_trace(mVcdFile, tmp_29_fu_296_p2, "tmp_29_fu_296_p2");
    sc_trace(mVcdFile, tmp_30_fu_302_p1, "tmp_30_fu_302_p1");
    sc_trace(mVcdFile, tmp_31_fu_306_p2, "tmp_31_fu_306_p2");
    sc_trace(mVcdFile, icmp_fu_271_p2, "icmp_fu_271_p2");
    sc_trace(mVcdFile, tmp32_V_1_fu_286_p2, "tmp32_V_1_fu_286_p2");
    sc_trace(mVcdFile, tmp32_V_2_fu_311_p1, "tmp32_V_2_fu_311_p1");
    sc_trace(mVcdFile, grp_fu_130_p1, "grp_fu_130_p1");
    sc_trace(mVcdFile, p_Result_4_fu_327_p4, "p_Result_4_fu_327_p4");
    sc_trace(mVcdFile, tmp24_cast_cast_fu_346_p3, "tmp24_cast_cast_fu_346_p3");
    sc_trace(mVcdFile, tmp_33_fu_343_p1, "tmp_33_fu_343_p1");
    sc_trace(mVcdFile, p_Repl2_1_trunc_fu_353_p2, "p_Repl2_1_trunc_fu_353_p2");
    sc_trace(mVcdFile, tmp_4_fu_359_p3, "tmp_4_fu_359_p3");
    sc_trace(mVcdFile, p_Result_2_fu_366_p5, "p_Result_2_fu_366_p5");
    sc_trace(mVcdFile, f_fu_377_p1, "f_fu_377_p1");
    sc_trace(mVcdFile, d_assign_fu_133_p1, "d_assign_fu_133_p1");
    sc_trace(mVcdFile, ireg_V_fu_388_p1, "ireg_V_fu_388_p1");
    sc_trace(mVcdFile, tmp_34_fu_392_p1, "tmp_34_fu_392_p1");
    sc_trace(mVcdFile, tmp_12_fu_427_p3, "tmp_12_fu_427_p3");
    sc_trace(mVcdFile, p_Result_3_fu_434_p1, "p_Result_3_fu_434_p1");
    sc_trace(mVcdFile, man_V_1_fu_438_p2, "man_V_1_fu_438_p2");
    sc_trace(mVcdFile, tmp_10_fu_424_p1, "tmp_10_fu_424_p1");
    sc_trace(mVcdFile, F2_fu_451_p2, "F2_fu_451_p2");
    sc_trace(mVcdFile, tmp_15_fu_463_p2, "tmp_15_fu_463_p2");
    sc_trace(mVcdFile, tmp_16_fu_469_p2, "tmp_16_fu_469_p2");
    sc_trace(mVcdFile, tmp_38_fu_493_p4, "tmp_38_fu_493_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, sh_amt_cast_fu_509_p1, "sh_amt_cast_fu_509_p1");
    sc_trace(mVcdFile, tmp_19_fu_517_p1, "tmp_19_fu_517_p1");
    sc_trace(mVcdFile, tmp_21_fu_521_p2, "tmp_21_fu_521_p2");
    sc_trace(mVcdFile, tmp_23_fu_537_p1, "tmp_23_fu_537_p1");
    sc_trace(mVcdFile, tmp_24_fu_540_p2, "tmp_24_fu_540_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_550_p2, "sel_tmp1_fu_550_p2");
    sc_trace(mVcdFile, sel_tmp6_demorgan_fu_560_p2, "sel_tmp6_demorgan_fu_560_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_564_p2, "sel_tmp6_fu_564_p2");
    sc_trace(mVcdFile, tmp_18_fu_512_p2, "tmp_18_fu_512_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_570_p2, "sel_tmp7_fu_570_p2");
    sc_trace(mVcdFile, sel_tmp8_fu_575_p2, "sel_tmp8_fu_575_p2");
    sc_trace(mVcdFile, sel_tmp21_demorgan_fu_593_p2, "sel_tmp21_demorgan_fu_593_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_598_p2, "sel_tmp3_fu_598_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_604_p2, "sel_tmp4_fu_604_p2");
    sc_trace(mVcdFile, tmp_40_fu_546_p1, "tmp_40_fu_546_p1");
    sc_trace(mVcdFile, tmp_39_fu_526_p1, "tmp_39_fu_526_p1");
    sc_trace(mVcdFile, sel_tmp_fu_587_p2, "sel_tmp_fu_587_p2");
    sc_trace(mVcdFile, sel_tmp9_fu_581_p2, "sel_tmp9_fu_581_p2");
    sc_trace(mVcdFile, tmp_22_fu_530_p3, "tmp_22_fu_530_p3");
    sc_trace(mVcdFile, sel_tmp2_fu_555_p2, "sel_tmp2_fu_555_p2");
    sc_trace(mVcdFile, or_cond_fu_617_p2, "or_cond_fu_617_p2");
    sc_trace(mVcdFile, newSel_fu_609_p3, "newSel_fu_609_p3");
    sc_trace(mVcdFile, newSel1_fu_623_p3, "newSel1_fu_623_p3");
    sc_trace(mVcdFile, or_cond1_fu_630_p2, "or_cond1_fu_630_p2");
    sc_trace(mVcdFile, or_cond2_fu_644_p2, "or_cond2_fu_644_p2");
    sc_trace(mVcdFile, newSel2_fu_636_p3, "newSel2_fu_636_p3");
    sc_trace(mVcdFile, p_Val2_1_fu_658_p0, "p_Val2_1_fu_658_p0");
    sc_trace(mVcdFile, OP1_V_1_fu_169_p1, "OP1_V_1_fu_169_p1");
    sc_trace(mVcdFile, p_Val2_1_fu_658_p1, "p_Val2_1_fu_658_p1");
    sc_trace(mVcdFile, grp_fu_664_p0, "grp_fu_664_p0");
    sc_trace(mVcdFile, OP1_V_fu_173_p1, "OP1_V_fu_173_p1");
    sc_trace(mVcdFile, grp_fu_664_p1, "grp_fu_664_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("distPoints_fix.hdltvin.dat");
    mHdltvoutHandle.open("distPoints_fix.hdltvout.dat");
}

distPoints_fix::~distPoints_fix() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete distPoints_fix_uibkb_U1;
    delete distPoints_fix_fpcud_U2;
    delete distPoints_fix_fsdEe_U3;
    delete distPoints_fix_mueOg_U4;
    delete distPoints_fix_mafYi_U5;
}

void distPoints_fix::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void distPoints_fix::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void distPoints_fix::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        exp_tmp_V_reg_752 = ireg_V_fu_388_p1.read().range(62, 52);
        isneg_reg_746 = ireg_V_fu_388_p1.read().range(63, 63);
        tmp_13_reg_762 = tmp_13_fu_418_p2.read();
        tmp_36_reg_757 = tmp_36_fu_414_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        icmp9_reg_797 = icmp9_fu_503_p2.read();
        man_V_2_reg_768 = man_V_2_fu_444_p3.read();
        sh_amt_reg_779 = sh_amt_fu_475_p3.read();
        tmp_14_reg_773 = tmp_14_fu_457_p2.read();
        tmp_17_reg_785 = tmp_17_fu_483_p2.read();
        tmp_37_reg_791 = tmp_37_fu_489_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        is_neg_reg_690 = grp_fu_664_p3.read().range(33, 33);
        p_Val2_4_reg_695 = p_Val2_4_fu_193_p3.read();
        tmp_3_reg_685 = tmp_3_fu_176_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_3_reg_685.read(), ap_const_lv1_0))) {
        msb_idx_reg_706 = msb_idx_fu_233_p2.read();
        p_Val2_4_cast_reg_701 = p_Val2_4_cast_fu_200_p1.read();
        tmp_11_reg_716 = msb_idx_fu_233_p2.read().range(31, 31);
        tmp_9_reg_711 = tmp_9_fu_239_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        p_Val2_1_reg_680 = p_Val2_1_fu_658_p2.read();
        r_V_reg_675 = r_V_fu_149_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp_reg_736 = temp_fu_381_p3.read();
    }
    if ((esl_seteq<1,1,1>(tmp_3_reg_685.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        tmp32_V_3_reg_721 = tmp32_V_3_fu_315_p3.read();
    }
    if ((esl_seteq<1,1,1>(tmp_3_reg_685.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        tmp32_V_6_reg_726 = tmp32_V_6_fu_323_p1.read();
        tmp_2_reg_731 = tmp_2_fu_337_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        v_assign_reg_741 = grp_fu_136_p2.read();
    }
}

void distPoints_fix::thread_F2_fu_451_p2() {
    F2_fu_451_p2 = (!ap_const_lv12_433.is_01() || !tmp_10_fu_424_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_433) - sc_biguint<12>(tmp_10_fu_424_p1.read()));
}

void distPoints_fix::thread_OP1_V_1_fu_169_p1() {
    OP1_V_1_fu_169_p1 = esl_sext<34,17>(r_V_1_fu_163_p2.read());
}

void distPoints_fix::thread_OP1_V_fu_173_p1() {
    OP1_V_fu_173_p1 = esl_sext<34,17>(r_V_reg_675.read());
}

void distPoints_fix::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void distPoints_fix::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void distPoints_fix::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void distPoints_fix::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void distPoints_fix::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void distPoints_fix::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void distPoints_fix::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void distPoints_fix::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void distPoints_fix::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void distPoints_fix::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void distPoints_fix::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void distPoints_fix::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void distPoints_fix::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void distPoints_fix::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void distPoints_fix::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void distPoints_fix::thread_ap_return() {
    ap_return = (!or_cond2_fu_644_p2.read()[0].is_01())? sc_lv<16>(): ((or_cond2_fu_644_p2.read()[0].to_bool())? newSel2_fu_636_p3.read(): ap_const_lv16_0);
}

void distPoints_fix::thread_f_fu_377_p1() {
    f_fu_377_p1 = p_Result_2_fu_366_p5.read();
}

void distPoints_fix::thread_grp_fu_664_p0() {
    grp_fu_664_p0 =  (sc_lv<17>) (OP1_V_fu_173_p1.read());
}

void distPoints_fix::thread_grp_fu_664_p1() {
    grp_fu_664_p1 =  (sc_lv<17>) (OP1_V_fu_173_p1.read());
}

void distPoints_fix::thread_icmp9_fu_503_p2() {
    icmp9_fu_503_p2 = (!tmp_38_fu_493_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_38_fu_493_p4.read() == ap_const_lv8_0);
}

void distPoints_fix::thread_icmp_fu_271_p2() {
    icmp_fu_271_p2 = (!tmp_20_fu_261_p4.read().is_01() || !ap_const_lv26_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_20_fu_261_p4.read() == ap_const_lv26_0);
}

void distPoints_fix::thread_ireg_V_fu_388_p1() {
    ireg_V_fu_388_p1 = d_assign_fu_133_p1.read();
}

void distPoints_fix::thread_is_neg_fu_181_p3() {
    is_neg_fu_181_p3 = grp_fu_664_p3.read().range(33, 33);
}

void distPoints_fix::thread_man_V_1_fu_438_p2() {
    man_V_1_fu_438_p2 = (!ap_const_lv54_0.is_01() || !p_Result_3_fu_434_p1.read().is_01())? sc_lv<54>(): (sc_biguint<54>(ap_const_lv54_0) - sc_biguint<54>(p_Result_3_fu_434_p1.read()));
}

void distPoints_fix::thread_man_V_2_fu_444_p3() {
    man_V_2_fu_444_p3 = (!isneg_reg_746.read()[0].is_01())? sc_lv<54>(): ((isneg_reg_746.read()[0].to_bool())? man_V_1_fu_438_p2.read(): p_Result_3_fu_434_p1.read());
}

void distPoints_fix::thread_msb_idx_1_cast_fu_257_p1() {
    msb_idx_1_cast_fu_257_p1 = esl_zext<32,31>(msb_idx_1_fu_251_p3.read());
}

void distPoints_fix::thread_msb_idx_1_fu_251_p3() {
    msb_idx_1_fu_251_p3 = (!tmp_11_reg_716.read()[0].is_01())? sc_lv<31>(): ((tmp_11_reg_716.read()[0].to_bool())? ap_const_lv31_0: tmp_9_reg_711.read());
}

void distPoints_fix::thread_msb_idx_fu_233_p2() {
    msb_idx_fu_233_p2 = (!ap_const_lv32_22.is_01() || !num_zeros_fu_229_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_22) - sc_biguint<32>(num_zeros_fu_229_p1.read()));
}

void distPoints_fix::thread_newSel1_fu_623_p3() {
    newSel1_fu_623_p3 = (!sel_tmp9_fu_581_p2.read()[0].is_01())? sc_lv<16>(): ((sel_tmp9_fu_581_p2.read()[0].to_bool())? tmp_22_fu_530_p3.read(): tmp_37_reg_791.read());
}

void distPoints_fix::thread_newSel2_fu_636_p3() {
    newSel2_fu_636_p3 = (!or_cond_fu_617_p2.read()[0].is_01())? sc_lv<16>(): ((or_cond_fu_617_p2.read()[0].to_bool())? newSel_fu_609_p3.read(): newSel1_fu_623_p3.read());
}

void distPoints_fix::thread_newSel_fu_609_p3() {
    newSel_fu_609_p3 = (!sel_tmp4_fu_604_p2.read()[0].is_01())? sc_lv<16>(): ((sel_tmp4_fu_604_p2.read()[0].to_bool())? tmp_40_fu_546_p1.read(): tmp_39_fu_526_p1.read());
}

void distPoints_fix::thread_num_zeros_fu_229_p1() {
    num_zeros_fu_229_p1 = tmp_8_fu_221_p3.read().range(32-1, 0);
}

void distPoints_fix::thread_or_cond1_fu_630_p2() {
    or_cond1_fu_630_p2 = (sel_tmp9_fu_581_p2.read() | sel_tmp2_fu_555_p2.read());
}

void distPoints_fix::thread_or_cond2_fu_644_p2() {
    or_cond2_fu_644_p2 = (or_cond_fu_617_p2.read() | or_cond1_fu_630_p2.read());
}

void distPoints_fix::thread_or_cond_fu_617_p2() {
    or_cond_fu_617_p2 = (sel_tmp4_fu_604_p2.read() | sel_tmp_fu_587_p2.read());
}

void distPoints_fix::thread_p_Repl2_1_trunc_fu_353_p2() {
    p_Repl2_1_trunc_fu_353_p2 = (!tmp24_cast_cast_fu_346_p3.read().is_01() || !tmp_33_fu_343_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp24_cast_cast_fu_346_p3.read()) + sc_biguint<8>(tmp_33_fu_343_p1.read()));
}

void distPoints_fix::thread_p_Result_1_fu_213_p3() {
    p_Result_1_fu_213_p3 = esl_concat<29,35>(ap_const_lv29_1FFFFFFF, p_Result_s_fu_203_p4.read());
}

void distPoints_fix::thread_p_Result_2_fu_366_p5() {
    p_Result_2_fu_366_p5 = esl_partset<32,32,9,32,32>(tmp32_V_6_reg_726.read(), tmp_4_fu_359_p3.read(), ap_const_lv32_17, ap_const_lv32_1F);
}

void distPoints_fix::thread_p_Result_3_fu_434_p1() {
    p_Result_3_fu_434_p1 = esl_zext<54,53>(tmp_12_fu_427_p3.read());
}

void distPoints_fix::thread_p_Result_4_fu_327_p4() {
    p_Result_4_fu_327_p4 = tmp32_V_6_fu_323_p1.read().range(30, 23);
}

void distPoints_fix::thread_p_Result_s_fu_203_p4() {
    p_Result_s_fu_203_p4 = p_Val2_4_cast_fu_200_p1.read().range(0, 34);
}

void distPoints_fix::thread_p_Val2_1_fu_658_p0() {
    p_Val2_1_fu_658_p0 =  (sc_lv<17>) (OP1_V_1_fu_169_p1.read());
}

void distPoints_fix::thread_p_Val2_1_fu_658_p1() {
    p_Val2_1_fu_658_p1 =  (sc_lv<17>) (OP1_V_1_fu_169_p1.read());
}

void distPoints_fix::thread_p_Val2_4_cast_fu_200_p1() {
    p_Val2_4_cast_fu_200_p1 = esl_sext<35,34>(p_Val2_4_reg_695.read());
}

void distPoints_fix::thread_p_Val2_4_fu_193_p3() {
    p_Val2_4_fu_193_p3 = (!is_neg_fu_181_p3.read()[0].is_01())? sc_lv<34>(): ((is_neg_fu_181_p3.read()[0].to_bool())? tmp_7_fu_188_p2.read(): grp_fu_664_p3.read());
}

void distPoints_fix::thread_r_V_1_fu_163_p2() {
    r_V_1_fu_163_p2 = (!tmp_5_fu_155_p1.read().is_01() || !tmp_6_fu_159_p1.read().is_01())? sc_lv<17>(): (sc_bigint<17>(tmp_5_fu_155_p1.read()) - sc_bigint<17>(tmp_6_fu_159_p1.read()));
}

void distPoints_fix::thread_r_V_fu_149_p2() {
    r_V_fu_149_p2 = (!tmp_fu_141_p1.read().is_01() || !tmp_1_fu_145_p1.read().is_01())? sc_lv<17>(): (sc_bigint<17>(tmp_fu_141_p1.read()) - sc_bigint<17>(tmp_1_fu_145_p1.read()));
}

void distPoints_fix::thread_sel_tmp1_fu_550_p2() {
    sel_tmp1_fu_550_p2 = (tmp_13_reg_762.read() ^ ap_const_lv1_1);
}

void distPoints_fix::thread_sel_tmp21_demorgan_fu_593_p2() {
    sel_tmp21_demorgan_fu_593_p2 = (sel_tmp6_demorgan_fu_560_p2.read() | tmp_14_reg_773.read());
}

void distPoints_fix::thread_sel_tmp2_fu_555_p2() {
    sel_tmp2_fu_555_p2 = (tmp_17_reg_785.read() & sel_tmp1_fu_550_p2.read());
}

void distPoints_fix::thread_sel_tmp3_fu_598_p2() {
    sel_tmp3_fu_598_p2 = (sel_tmp21_demorgan_fu_593_p2.read() ^ ap_const_lv1_1);
}

void distPoints_fix::thread_sel_tmp4_fu_604_p2() {
    sel_tmp4_fu_604_p2 = (icmp9_reg_797.read() & sel_tmp3_fu_598_p2.read());
}

void distPoints_fix::thread_sel_tmp6_demorgan_fu_560_p2() {
    sel_tmp6_demorgan_fu_560_p2 = (tmp_13_reg_762.read() | tmp_17_reg_785.read());
}

void distPoints_fix::thread_sel_tmp6_fu_564_p2() {
    sel_tmp6_fu_564_p2 = (sel_tmp6_demorgan_fu_560_p2.read() ^ ap_const_lv1_1);
}

void distPoints_fix::thread_sel_tmp7_fu_570_p2() {
    sel_tmp7_fu_570_p2 = (tmp_14_reg_773.read() & sel_tmp6_fu_564_p2.read());
}

void distPoints_fix::thread_sel_tmp8_fu_575_p2() {
    sel_tmp8_fu_575_p2 = (tmp_18_fu_512_p2.read() ^ ap_const_lv1_1);
}

void distPoints_fix::thread_sel_tmp9_fu_581_p2() {
    sel_tmp9_fu_581_p2 = (sel_tmp7_fu_570_p2.read() & sel_tmp8_fu_575_p2.read());
}

void distPoints_fix::thread_sel_tmp_fu_587_p2() {
    sel_tmp_fu_587_p2 = (sel_tmp7_fu_570_p2.read() & tmp_18_fu_512_p2.read());
}

void distPoints_fix::thread_sh_amt_cast_fu_509_p1() {
    sh_amt_cast_fu_509_p1 = esl_sext<32,12>(sh_amt_reg_779.read());
}

void distPoints_fix::thread_sh_amt_fu_475_p3() {
    sh_amt_fu_475_p3 = (!tmp_14_fu_457_p2.read()[0].is_01())? sc_lv<12>(): ((tmp_14_fu_457_p2.read()[0].to_bool())? tmp_15_fu_463_p2.read(): tmp_16_fu_469_p2.read());
}

void distPoints_fix::thread_temp_fu_381_p3() {
    temp_fu_381_p3 = (!tmp_3_reg_685.read()[0].is_01())? sc_lv<32>(): ((tmp_3_reg_685.read()[0].to_bool())? ap_const_lv32_0: f_fu_377_p1.read());
}

void distPoints_fix::thread_tmp24_cast_cast_fu_346_p3() {
    tmp24_cast_cast_fu_346_p3 = (!tmp_2_reg_731.read()[0].is_01())? sc_lv<8>(): ((tmp_2_reg_731.read()[0].to_bool())? ap_const_lv8_6A: ap_const_lv8_69);
}

void distPoints_fix::thread_tmp32_V_1_fu_286_p2() {
    tmp32_V_1_fu_286_p2 = (!tmp_s_fu_280_p2.read().is_01())? sc_lv<32>(): tmp32_V_fu_277_p1.read() << (unsigned short)tmp_s_fu_280_p2.read().to_uint();
}

void distPoints_fix::thread_tmp32_V_2_fu_311_p1() {
    tmp32_V_2_fu_311_p1 = tmp_31_fu_306_p2.read().range(32-1, 0);
}

void distPoints_fix::thread_tmp32_V_3_fu_315_p3() {
    tmp32_V_3_fu_315_p3 = (!icmp_fu_271_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_fu_271_p2.read()[0].to_bool())? tmp32_V_1_fu_286_p2.read(): tmp32_V_2_fu_311_p1.read());
}

void distPoints_fix::thread_tmp32_V_6_fu_323_p1() {
    tmp32_V_6_fu_323_p1 = grp_fu_130_p1.read();
}

void distPoints_fix::thread_tmp32_V_fu_277_p1() {
    tmp32_V_fu_277_p1 = p_Val2_4_reg_695.read().range(32-1, 0);
}

void distPoints_fix::thread_tmp_10_fu_424_p1() {
    tmp_10_fu_424_p1 = esl_zext<12,11>(exp_tmp_V_reg_752.read());
}

void distPoints_fix::thread_tmp_12_fu_427_p3() {
    tmp_12_fu_427_p3 = esl_concat<1,52>(ap_const_lv1_1, tmp_36_reg_757.read());
}

void distPoints_fix::thread_tmp_13_fu_418_p2() {
    tmp_13_fu_418_p2 = (!tmp_34_fu_392_p1.read().is_01() || !ap_const_lv63_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_34_fu_392_p1.read() == ap_const_lv63_0);
}

void distPoints_fix::thread_tmp_14_fu_457_p2() {
    tmp_14_fu_457_p2 = (!F2_fu_451_p2.read().is_01() || !ap_const_lv12_B.is_01())? sc_lv<1>(): (sc_bigint<12>(F2_fu_451_p2.read()) > sc_bigint<12>(ap_const_lv12_B));
}

void distPoints_fix::thread_tmp_15_fu_463_p2() {
    tmp_15_fu_463_p2 = (!ap_const_lv12_FF5.is_01() || !F2_fu_451_p2.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_FF5) + sc_biguint<12>(F2_fu_451_p2.read()));
}

void distPoints_fix::thread_tmp_16_fu_469_p2() {
    tmp_16_fu_469_p2 = (!ap_const_lv12_B.is_01() || !F2_fu_451_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_B) - sc_biguint<12>(F2_fu_451_p2.read()));
}

void distPoints_fix::thread_tmp_17_fu_483_p2() {
    tmp_17_fu_483_p2 = (!F2_fu_451_p2.read().is_01() || !ap_const_lv12_B.is_01())? sc_lv<1>(): sc_lv<1>(F2_fu_451_p2.read() == ap_const_lv12_B);
}

void distPoints_fix::thread_tmp_18_fu_512_p2() {
    tmp_18_fu_512_p2 = (!sh_amt_reg_779.read().is_01() || !ap_const_lv12_36.is_01())? sc_lv<1>(): (sc_biguint<12>(sh_amt_reg_779.read()) < sc_biguint<12>(ap_const_lv12_36));
}

void distPoints_fix::thread_tmp_19_fu_517_p1() {
    tmp_19_fu_517_p1 = esl_zext<54,32>(sh_amt_cast_fu_509_p1.read());
}

void distPoints_fix::thread_tmp_1_fu_145_p1() {
    tmp_1_fu_145_p1 = esl_sext<17,16>(x1_V.read());
}

void distPoints_fix::thread_tmp_20_fu_261_p4() {
    tmp_20_fu_261_p4 = msb_idx_1_fu_251_p3.read().range(30, 5);
}

void distPoints_fix::thread_tmp_21_fu_521_p2() {
    tmp_21_fu_521_p2 = (!man_V_2_reg_768.read().is_01() || !tmp_19_fu_517_p1.read().is_01())? sc_lv<54>(): sc_bigint<54>(man_V_2_reg_768.read()) >> (unsigned short)tmp_19_fu_517_p1.read().to_uint();
}

void distPoints_fix::thread_tmp_22_fu_530_p3() {
    tmp_22_fu_530_p3 = (!isneg_reg_746.read()[0].is_01())? sc_lv<16>(): ((isneg_reg_746.read()[0].to_bool())? ap_const_lv16_FFFF: ap_const_lv16_0);
}

void distPoints_fix::thread_tmp_23_fu_537_p1() {
    tmp_23_fu_537_p1 = esl_sext<32,16>(tmp_37_reg_791.read());
}

void distPoints_fix::thread_tmp_24_fu_540_p2() {
    tmp_24_fu_540_p2 = (!sh_amt_cast_fu_509_p1.read().is_01())? sc_lv<32>(): tmp_23_fu_537_p1.read() << (unsigned short)sh_amt_cast_fu_509_p1.read().to_uint();
}

void distPoints_fix::thread_tmp_25_fu_292_p1() {
    tmp_25_fu_292_p1 = msb_idx_1_fu_251_p3.read().range(6-1, 0);
}

void distPoints_fix::thread_tmp_29_fu_296_p2() {
    tmp_29_fu_296_p2 = (!ap_const_lv6_21.is_01() || !tmp_25_fu_292_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_21) + sc_biguint<6>(tmp_25_fu_292_p1.read()));
}

void distPoints_fix::thread_tmp_2_fu_337_p2() {
    tmp_2_fu_337_p2 = (!p_Result_4_fu_327_p4.read().is_01() || !ap_const_lv8_9E.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_4_fu_327_p4.read() != ap_const_lv8_9E);
}

void distPoints_fix::thread_tmp_30_fu_302_p1() {
    tmp_30_fu_302_p1 = esl_zext<35,6>(tmp_29_fu_296_p2.read());
}

void distPoints_fix::thread_tmp_31_fu_306_p2() {
    tmp_31_fu_306_p2 = (!tmp_30_fu_302_p1.read().is_01())? sc_lv<35>(): p_Val2_4_cast_reg_701.read() >> (unsigned short)tmp_30_fu_302_p1.read().to_uint();
}

void distPoints_fix::thread_tmp_33_fu_343_p1() {
    tmp_33_fu_343_p1 = msb_idx_reg_706.read().range(8-1, 0);
}

void distPoints_fix::thread_tmp_34_fu_392_p1() {
    tmp_34_fu_392_p1 = ireg_V_fu_388_p1.read().range(63-1, 0);
}

void distPoints_fix::thread_tmp_36_fu_414_p1() {
    tmp_36_fu_414_p1 = ireg_V_fu_388_p1.read().range(52-1, 0);
}

void distPoints_fix::thread_tmp_37_fu_489_p1() {
    tmp_37_fu_489_p1 = man_V_2_fu_444_p3.read().range(16-1, 0);
}

void distPoints_fix::thread_tmp_38_fu_493_p4() {
    tmp_38_fu_493_p4 = sh_amt_fu_475_p3.read().range(11, 4);
}

void distPoints_fix::thread_tmp_39_fu_526_p1() {
    tmp_39_fu_526_p1 = tmp_21_fu_521_p2.read().range(16-1, 0);
}

void distPoints_fix::thread_tmp_3_fu_176_p2() {
    tmp_3_fu_176_p2 = (!grp_fu_664_p3.read().is_01() || !ap_const_lv34_0.is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_664_p3.read() == ap_const_lv34_0);
}

void distPoints_fix::thread_tmp_40_fu_546_p1() {
    tmp_40_fu_546_p1 = tmp_24_fu_540_p2.read().range(16-1, 0);
}

void distPoints_fix::thread_tmp_4_fu_359_p3() {
    tmp_4_fu_359_p3 = esl_concat<1,8>(is_neg_reg_690.read(), p_Repl2_1_trunc_fu_353_p2.read());
}

void distPoints_fix::thread_tmp_5_fu_155_p1() {
    tmp_5_fu_155_p1 = esl_sext<17,16>(y2_V.read());
}

void distPoints_fix::thread_tmp_6_fu_159_p1() {
    tmp_6_fu_159_p1 = esl_sext<17,16>(y1_V.read());
}

void distPoints_fix::thread_tmp_7_fu_188_p2() {
    tmp_7_fu_188_p2 = (!ap_const_lv34_0.is_01() || !grp_fu_664_p3.read().is_01())? sc_lv<34>(): (sc_biguint<34>(ap_const_lv34_0) - sc_bigint<34>(grp_fu_664_p3.read()));
}

void distPoints_fix::thread_tmp_8_fu_221_p3() {
    tmp_8_fu_221_p3 = esl_cttz<64,64>(p_Result_1_fu_213_p3.read());
}

void distPoints_fix::thread_tmp_9_fu_239_p1() {
    tmp_9_fu_239_p1 = msb_idx_fu_233_p2.read().range(31-1, 0);
}

void distPoints_fix::thread_tmp_fu_141_p1() {
    tmp_fu_141_p1 = esl_sext<17,16>(x2_V.read());
}

void distPoints_fix::thread_tmp_s_fu_280_p2() {
    tmp_s_fu_280_p2 = (!ap_const_lv32_1F.is_01() || !msb_idx_1_cast_fu_257_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1F) - sc_biguint<32>(msb_idx_1_cast_fu_257_p1.read()));
}

void distPoints_fix::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

void distPoints_fix::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x1_V\" :  \"" << x1_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"y1_V\" :  \"" << y1_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x2_V\" :  \"" << x2_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"y2_V\" :  \"" << y2_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

